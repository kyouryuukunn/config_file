?? TITLE : 演算オブジェクト

cppreference.com -> C++ 関数オブジェクト -> 演算オブジェクト

演算オブジェクト

四則演算

plus<T>  x + y
minus<T>  x - y
multiplies<T>  x * y
divides<T>  x / y
modulus<T>  x % y
negate<T>  -x

比較演算

equal_to<T>  x == y
not_equal_to<T>  x != y
greater<T>  x > y
less<T>  x < y
greater_equal<T>  x >= y
less_equal<T>  x <= y

論理演算

logical_and<T>  x && y
logical_or<T>  x || y
logical_not<T>  !x

-------------------------------------------------------------------------------------- 


?? TITLE : 関数アダプタ

cppreference.com -> C++ 関数オブジェクト -> 関数アダプタ

関数アダプタ

論理値反転

クラステンプレート  ヘルパ関数  項数  説明
unary_negate<pred>  not1<pred>()  1  !predとなる関数オブジェクト
binary_negate<pred>  not2<pred>()  2  !predとなる関数オブジェクト

バインダ

クラステンプレート  ヘルパ関数  項数  説明
binder1st<pred>()  bind1st<pred>()  1  2項関数オブジェクトを1項として扱う。元の関数オブジェクトの1項目は定数が渡される
binder2nd<pred>()  bind2nd<pred>()  1  2項関数オブジェクトを1項として扱う。元の関数オブジェクトの2項目は定数が渡される

アダプタ

クラステンプレート  ヘルパ関数  項数  説明
mem_fun_t<S, T>  mem_fun()  0  S T::func()というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトのポインタを渡し、t->func()と呼び出される。
mem_fun1_t<S, T, A>    1  S T::func(A a)というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトのポインタを渡し、t->func(a)と呼び出される。
const_mem_fun_t    0  S T::func()というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトのポインタを渡し、t->func()と呼び出される。
const_mem_fun1_t    1  S T::func(A a)というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトのポインタを渡し、t->func(a)と呼び出される。
mem_fun_ref_t  mem_ref()  0  S T::func()というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトの参照を渡し、t.func()と呼び出される。
mem_fun1_ref_t    1  S T::func(A a)というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトの参照を渡し、t.func(a)と呼び出される。
const_mem_fun_t    0  S T::func()というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトの参照を渡し、t.func()と呼び出される。
const_mem_fun1_t    1  S T::func(A a)というメンバー関数を呼び出す関数オブジェクトを作成する。実行時にはオブジェクトの参照を渡し、t.func(a)と呼び出される。
pointer_to_unary_function<A, R>  ptr_fun<A, R>()  1  R func(A a)という型の関数へのポインタを１項関数オブジェクトに変換する
pointer_to_binary_function<A, R>  ptr_fun<A1, A2, R>()  2  R func(A1 a1, A2, a2)という関数へ
//ptr_funは引数必須
