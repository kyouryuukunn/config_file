TITLE : SDL_CreateCursor

SDL Library Documentation
PrevNext

SDL_CreateCursor

Name

SDL_CreateCursor --  新しいマウスカーソルを作ります。

Synopsis

#include "SDL.h"

SDL_Cursor *SDL_CreateCursor(Uint8 *data, Uint8 *mask, int w, int h, int hot_x, int hot_y);

Description


指定された data と mask (MSB フォーマット)を使ってカーソルを作ります。 カーソルの横幅は 8 の倍数でなければいけません。


カーソルは以下に従って白黒で作られます。


データ / マスク
画面上の結果のピクセル
0 / 1
白
1 / 1
黒
0 / 0
透明
1 / 0
可能なら反転色、そうでない場合は黒


この関数で作られたカーソルは SDL_FreeCursor で 解放されなければいけません。

Example


/* メーリングリストから盗用 */ /* XPM から新しいマウスカーソルを作る */ /* XPM */ static const char *arrow[] = { /* width height num_colors chars_per_pixel */ " 32 32 3 1", /* colors */ "X c #000000", ". c #ffffff", " c None", /* pixels */ "X ", "XX ", "X.X ", "X..X ", "X...X ", "X....X ", "X.....X ", "X......X ", "X.......X ", "X........X ", "X.....XXXXX ", "X..X..X ", "X.X X..X ", "XX X..X ", "X X..X ", " X..X ", " X..X ", " X..X ", " XX ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "0,0" }; static SDL_Cursor *init_system_cursor(const char *image[]) { int i, row, col; Uint8 data[4*32]; Uint8 mask[4*32]; int hot_x, hot_y; i = -1; for ( row=0; row<32; ++row ) { for ( col=0; col<32; ++col ) { if ( col % 8 ) { data[i] <<= 1; mask[i] <<= 1; } else { ++i; data[i] = mask[i] = 0; } switch (image[4+row][col]) { case 'X': data[i] |= 0x01; mask[i] |= 0x01; break; case '.': mask[i] |= 0x01; break; case ' ': break; } } } sscanf(image[4+row], "%d,%d", &hot_x, &hot_y); return SDL_CreateCursor(data, mask, 32, 32, hot_x, hot_y); }


See Also

SDL_FreeCursor, SDL_SetCursor, SDL_ShowCursor

PrevHomeNext
SDL_WarpMouseUpSDL_FreeCursor
