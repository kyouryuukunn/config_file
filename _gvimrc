scriptencoding utf-8
set rop=type:directx
" ------------------------------------------------------------------------------------ 
" カラー設定:
colorscheme zenburn
"IMEで色変更
"カラー設定した後にCursorIMを定義する方法
if has('multi_byte_ime')
  highlight Cursor guifg=NONE guibg=Green
  highlight CursorIM guifg=NONE guibg=White
endif

highlight Pmenu ctermbg=8 guibg=#303030
highlight PmenuSel ctermbg=1 guifg=#dddd00 guibg=#000060
highlight PmenuSbar ctermbg=0 guibg=#d6d6d6

set guitablabel=%M%n\ %t
"------------------------------------------------------------------------------------- 
" 起動位置
winpos 960 0
" 縦幅　デフォルトは24
set lines=40
" 横幅　デフォルトは80
set columns=140
"------------------------------------------------------------------------------------- 
" フォント設定:
if has('win32')
  " Windows用
  "set guifont=Meiryoke_Gothic_for_Powerline:h12:cSHIFTJIS
  set guifont=Ricty_for_Powerline:h13.5:cSHIFTJIS
  " set guifont=Ricty:h13.5:cSHIFTJIS
  "set guifont=MS_Mincho:h12:cSHIFTJIS
  "set guifont=Osaka－等幅-NBAA:h12
  " 行間隔の設定
  set linespace=2
  " 一部のUCS文字の幅を自動計測して決める
  if has('kaoriya')
    set ambiwidth=auto
  endif
elseif has('mac')
  set guifont=Osaka－等幅-NBAA:h14
elseif has('xfontset')
  " UNIX用 (xfontsetを使用)
  set guifontset=a14,r14,k14
elseif has('unix')
  set guifont=Ricty_for_Powerline:h13.5:cSHIFTJIS
  " set gfn=Monospace\ 12
  set gfw=
endif
"------------------------------------------------------------------------------------- 
"全画面表示
function! ToggleFullScreen() "タイトルバー非表示
  if &guioptions =~# 'C'
    set guioptions-=C
    if exists('s:go_temp')
      if s:go_temp =~# 'm'
        set guioptions+=m
      endif
      if s:go_temp =~# 'T'
        set guioptions+=T
      endif
    endif
    simalt ~r
  else
    let s:go_temp = &guioptions
    set guioptions+=C
    set guioptions-=m
    set guioptions-=T
    simalt ~x
  endif
endfunction

"au GUIEnter * call ToggleFullScreen()
nnoremap <F11> :call ToggleFullScreen()<CR>

"------------------------------------------------------------------------------------- 
" 言語メニュー表示
"let do_syntax_sei_menu = 1|runtime! synmenu.vim|aunmenu &Syntax.&Show\ filetypes\ in\ menu
" ツールバーを削除
set guioptions-=T
"メニューを削除
set guioptions-=m
menu &File.エンコード指定(&E)\.\.\..開く(&O)\.\.\..UTF-16le(&l)<Tab>fenc=utf-16le :browse confirm e ++enc=utf-16le<CR>
menu &File.エンコード指定(&E)\.\.\..再読込(&R)\.\.\..UTF-16le(&l)<Tab>fenc=utf-16le :e ++enc=utf-16le<CR>
menu &File.エンコード指定(&E)\.\.\..保存(&S)\.\.\..UTF-16le(&l)<Tab>fenc=utf-16le :set fenc=utf-16le \| w<CR>
menu &File.エンコード指定(&E)\.\.\..開く(&O)\.\.\..UTF-16(&b)<Tab>fenc=utf-16 :browse confirm e ++enc=utf-16<CR>
menu &File.エンコード指定(&E)\.\.\..再読込(&R)\.\.\..UTF-16(&b)<Tab>fenc=utf-16 :e ++enc=utf-16<CR>
menu &File.エンコード指定(&E)\.\.\..保存(&S)\.\.\..UTF-16(&b)<Tab>fenc=utf-16 :set fenc=utf-16 \| w<CR>
"------------------------------------------------------------------------------------- 
"全角スペースを明示的に表示する
function! ZenkakuSpace()
  highlight ZenkakuSpace cterm=underline ctermfg=darkgrey gui=underline guifg=darkgrey
  silent! match ZenkakuSpace /　/
endfunction

if has('syntax')
  augroup ZenkakuSpace
    autocmd!
    autocmd VimEnter,BufEnter * call ZenkakuSpace()
  augroup END
endif

set textwidth=0
"------------------------------------------------------------------------------------- 
"半透明
"if has('win32') || has('win64') 
	"au GUIEnter *	set transparency=210
"endif
